// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TargetDB.Data;

namespace TargetDB.Migrations
{
    [DbContext(typeof(CycleContext))]
    [Migration("20220627153346_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TargetDB.Models.Cyclotron", b =>
                {
                    b.Property<int>("CyclotronID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CyclotronDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclotronName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetID")
                        .HasColumnType("int");

                    b.Property<int>("WCode")
                        .HasColumnType("int");

                    b.Property<int>("WLotNum")
                        .HasColumnType("int");

                    b.HasKey("CyclotronID");

                    b.HasIndex("TargetID")
                        .IsUnique();

                    b.HasIndex("WLotNum")
                        .IsUnique();

                    b.ToTable("Cyclotron");
                });

            modelBuilder.Entity("TargetDB.Models.Target", b =>
                {
                    b.Property<int>("TargetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TargetID");

                    b.ToTable("Target");
                });

            modelBuilder.Entity("TargetDB.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TargetID")
                        .HasColumnType("int");

                    b.Property<string>("WCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WLotNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("WarehouseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseID");

                    b.HasIndex("TargetID")
                        .IsUnique();

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("TargetDB.Models.Cyclotron", b =>
                {
                    b.HasOne("TargetDB.Models.Target", "Target")
                        .WithOne("Cyclotron")
                        .HasForeignKey("TargetDB.Models.Cyclotron", "TargetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TargetDB.Models.Warehouse", "Warehouse")
                        .WithOne("Cyclotron")
                        .HasForeignKey("TargetDB.Models.Cyclotron", "WLotNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("TargetDB.Models.Warehouse", b =>
                {
                    b.HasOne("TargetDB.Models.Target", "Target")
                        .WithOne("Warehouse")
                        .HasForeignKey("TargetDB.Models.Warehouse", "TargetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("TargetDB.Models.Target", b =>
                {
                    b.Navigation("Cyclotron");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("TargetDB.Models.Warehouse", b =>
                {
                    b.Navigation("Cyclotron");
                });
#pragma warning restore 612, 618
        }
    }
}
