// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TargetDB.Data;

#nullable disable

namespace TargetDB.Migrations
{
    [DbContext(typeof(TargetContext))]
    [Migration("20220720185805_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TargetDB.Models.CS30Curved", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime?>("BombardingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BombardingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CyclotronDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CyclotronName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlatingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlatingLotNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessingLotNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WarehouseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WarehouseLotNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CS30Curved", (string)null);
                });

            modelBuilder.Entity("TargetDB.Models.CS30CurvedTarget", b =>
                {
                    b.Property<int>("CurvedTestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurvedTestID"), 1L, 1);

                    b.Property<int>("CS30CurvedID")
                        .HasColumnType("int");

                    b.Property<string>("HNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JigTest")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurvedTestID");

                    b.HasIndex("CS30CurvedID");

                    b.ToTable("CS30CurvedTarget", (string)null);
                });

            modelBuilder.Entity("TargetDB.Models.CS30CurvedTarget", b =>
                {
                    b.HasOne("TargetDB.Models.CS30Curved", "CS30Curved")
                        .WithMany("CS30CurvedTargets")
                        .HasForeignKey("CS30CurvedID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CS30Curved");
                });

            modelBuilder.Entity("TargetDB.Models.CS30Curved", b =>
                {
                    b.Navigation("CS30CurvedTargets");
                });
#pragma warning restore 612, 618
        }
    }
}
